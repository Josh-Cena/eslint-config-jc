"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[375],{9916:(e,a,n)=>{n.d(a,{xA:()=>i,yg:()=>g});var l=n(3696);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,l,r=function(e,a){if(null==e)return{};var n,l,r={},t=Object.keys(e);for(l=0;l<t.length;l++)n=t[l],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(l=0;l<t.length;l++)n=t[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=l.createContext({}),y=function(e){var a=l.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},i=function(e){var a=y(e.components);return l.createElement(p.Provider,{value:a},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},m=l.forwardRef((function(e,a){var n=e.components,r=e.mdxType,t=e.originalType,p=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),d=y(n),m=r,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||t;return n?l.createElement(g,s(s({ref:a},i),{},{components:n})):l.createElement(g,s({ref:a},i))}));function g(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var t=n.length,s=new Array(t);s[0]=m;var o={};for(var p in a)hasOwnProperty.call(a,p)&&(o[p]=a[p]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var y=2;y<t;y++)s[y]=n[y];return l.createElement.apply(null,s)}return l.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8942:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>t,metadata:()=>o,toc:()=>y});var l=n(8102),r=(n(3696),n(9916));const t={sidebar_position:5},s="Control flow",o={unversionedId:"eslint-base/control-flow",id:"eslint-base/control-flow",title:"Control flow",description:"This page introduces styles for all statements, such as if-else, loops, conditions, and general authoring of control flow.",source:"@site/../docs/eslint-base/control-flow.md",sourceDirName:"eslint-base",slug:"/eslint-base/control-flow",permalink:"/js-style-guide/eslint-base/control-flow",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Operators",permalink:"/js-style-guide/eslint-base/operators"},next:{title:"Functions",permalink:"/js-style-guide/eslint-base/functions"}},p={},y=[{value:"Blocks",id:"blocks",level:2},{value:"<code>no-empty</code>",id:"no-empty",level:3},{value:"<code>no-lone-blocks</code>",id:"no-lone-blocks",level:3},{value:"Conditionals",id:"conditionals",level:2},{value:"<code>no-constant-condition</code>",id:"no-constant-condition",level:3},{value:"<code>no-negated-condition</code>",id:"no-negated-condition",level:3},{value:"<code>if-else</code>",id:"if-else",level:2},{value:"<code>no-dupe-else-if</code>",id:"no-dupe-else-if",level:3},{value:"<code>no-else-return</code>",id:"no-else-return",level:3},{value:"<code>no-lonely-if</code>",id:"no-lonely-if",level:3},{value:"Loops",id:"loops",level:2},{value:"<code>for-direction</code>",id:"for-direction",level:3},{value:"<code>guard-for-in</code>",id:"guard-for-in",level:3},{value:"<code>no-continue</code>",id:"no-continue",level:3},{value:"<code>no-unmodified-loop-condition</code>",id:"no-unmodified-loop-condition",level:3},{value:"<code>no-unreachable-loop</code>",id:"no-unreachable-loop",level:3},{value:"Use of <code>for-in</code>",id:"use-of-for-in",level:3},{value:"<code>switch-case</code>",id:"switch-case",level:2},{value:"<code>default-case</code>",id:"default-case",level:3},{value:"<code>default-case-last</code>",id:"default-case-last",level:3},{value:"<code>no-case-declarations</code>",id:"no-case-declarations",level:3},{value:"<code>no-duplicate-case</code>",id:"no-duplicate-case",level:3},{value:"<code>no-fallthrough</code>",id:"no-fallthrough",level:3},{value:"<code>try-catch</code>",id:"try-catch",level:2},{value:"<code>no-ex-assign</code>",id:"no-ex-assign",level:3},{value:"<code>no-unsafe-finally</code>",id:"no-unsafe-finally",level:3},{value:"<code>no-useless-catch</code>",id:"no-useless-catch",level:3},{value:"Labels",id:"labels",level:2},{value:"<code>no-extra-label</code>",id:"no-extra-label",level:3},{value:"<code>no-label-var</code>",id:"no-label-var",level:3},{value:"<code>no-labels</code>",id:"no-labels",level:3},{value:"<code>no-unused-labels</code>",id:"no-unused-labels",level:3},{value:"Other statements",id:"other-statements",level:2},{value:"<code>no-debugger</code>",id:"no-debugger",level:3},{value:"<code>no-throw-literal</code>",id:"no-throw-literal",level:3},{value:"<code>no-unreachable</code>",id:"no-unreachable",level:3},{value:"<code>no-unused-expressions</code>",id:"no-unused-expressions",level:3},{value:"<code>no-with</code>",id:"no-with",level:3},{value:"Complexity",id:"complexity",level:2},{value:"<code>complexity</code>",id:"complexity-1",level:3},{value:"<code>max-depth</code>",id:"max-depth",level:3},{value:"<code>max-lines</code>",id:"max-lines",level:3},{value:"<code>max-statements</code>",id:"max-statements",level:3}],i={toc:y},d="wrapper";function c(e){let{components:a,...n}=e;return(0,r.yg)(d,(0,l.A)({},i,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"control-flow"},"Control flow"),(0,r.yg)("p",null,"This page introduces styles for all statements, such as ",(0,r.yg)("inlineCode",{parentName:"p"},"if-else"),", loops, conditions, and general authoring of control flow."),(0,r.yg)("h2",{id:"blocks"},"Blocks"),(0,r.yg)("h3",{id:"no-empty"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-empty"},(0,r.yg)("inlineCode",{parentName:"a"},"no-empty"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Allow empty catch blocks (",(0,r.yg)("inlineCode",{parentName:"li"},"allowEmptyCatch: true"),")")))),(0,r.yg)("p",null,"Empty blocks are useless and are a sign of refactoring artifacts. The only exception is empty ",(0,r.yg)("inlineCode",{parentName:"p"},"catch")," blocks, which are used to ignore errors. However this should be rare too, and you should generally add a comment explaining why the error is ignored. This rule doesn't prevent an empty statement from being used, so you can still do this:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; a "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"<"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"10"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; a"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},");"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; a "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"<"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"10"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; a"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},");")))))),(0,r.yg)("p",null,"Although TypeScript doesn't allow the following when you want an ",(0,r.yg)("inlineCode",{parentName:"p"},"unless")," construct:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Math: Math"},"Math")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) Math.random(): number"},"random")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"() "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},">"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"0.5"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},")",(0,r.yg)("data-err",{parentName:"span"},";"))),(0,r.yg)("span",{parentName:"code",className:"error"},(0,r.yg)("span",{parentName:"span"},"The body of an 'if' statement cannot be the empty statement."),(0,r.yg)("span",{parentName:"span",className:"code"},"1313")),(0,r.yg)("span",{parentName:"code",className:"error-behind"},"The body of an 'if' statement cannot be the empty statement."),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// do something when the condition is false")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark twoslash lsp",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Math: Math"},"Math")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) Math.random(): number"},"random")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"() "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},">"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"0.5"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},")",(0,r.yg)("data-err",{parentName:"span"},";"))),(0,r.yg)("span",{parentName:"code",className:"error"},(0,r.yg)("span",{parentName:"span"},"The body of an 'if' statement cannot be the empty statement."),(0,r.yg)("span",{parentName:"span",className:"code"},"1313")),(0,r.yg)("span",{parentName:"code",className:"error-behind"},"The body of an 'if' statement cannot be the empty statement."),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// do something when the condition is false")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h3",{id:"no-lone-blocks"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-lone-blocks"},(0,r.yg)("inlineCode",{parentName:"a"},"no-lone-blocks"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"This rule only reports where the block is absolutely unnecessary (when it does not contain lexical declarations). Removing the block will be able to reduce indentation and lines."),(0,r.yg)("h2",{id:"conditionals"},"Conditionals"),(0,r.yg)("h3",{id:"no-constant-condition"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-constant-condition"},(0,r.yg)("inlineCode",{parentName:"a"},"no-constant-condition"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Disallow constant conditions in loops (",(0,r.yg)("inlineCode",{parentName:"li"},"checkLoops: true"),")")))),(0,r.yg)("p",null,"Constant conditions that always evaluate to truthy or falsy can be refactoring artifacts. In addition, infinite loops are also forbidden to prompt developers to consider alternatives like explicit exit conditions instead of ",(0,r.yg)("inlineCode",{parentName:"p"},"break")," statements, or ",(0,r.yg)("inlineCode",{parentName:"p"},"setInterval"),"."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// Instead of this:")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"true"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  curNode "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"findNextNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(curNode);")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"isTargetNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(curNode)) "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}")),(0,r.yg)("div",{parentName:"code",className:"line"}),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// Do this:")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"do"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  curNode "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"findNextNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(curNode);")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"isTargetNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(curNode));"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// Instead of this:")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"true"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  curNode "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"findNextNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(curNode);")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"isTargetNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(curNode)) "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")),(0,r.yg)("div",{parentName:"code",className:"line"}),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// Do this:")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"do"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  curNode "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"findNextNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(curNode);")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"isTargetNode"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(curNode));")))))),(0,r.yg)("p",null,"In the very rare case where you do need an infinite loop (such as when the program is a message loop), use a disable comment. Note that ",(0,r.yg)("inlineCode",{parentName:"p"},"for (;;)")," is also a viable workaround where really intended."),(0,r.yg)("h3",{id:"no-negated-condition"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-negated-condition"},(0,r.yg)("inlineCode",{parentName:"a"},"no-negated-condition"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("p",null,"You should generally avoid using negative conditions when the two cases have equal weight:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"isFoo) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 10 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 10 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"isFoo) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 10 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 10 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"However, in the case where one case is either much more common or much shorter, put the shorter case first, so it can get out of readers' minds early:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"isReady) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 5 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 50 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"isReady) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 5 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 50 lines")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"But in this case, consider whether you can use early return, so you can omit the ",(0,r.yg)("inlineCode",{parentName:"p"},"else")," block altogether."),(0,r.yg)("h2",{id:"if-else"},(0,r.yg)("inlineCode",{parentName:"h2"},"if-else")),(0,r.yg)("h3",{id:"no-dupe-else-if"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-dupe-else-if"},(0,r.yg)("inlineCode",{parentName:"a"},"no-dupe-else-if"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"It is probably a mistake, or at least extremely confusing, to have the same condition written twice. If each condition leads to a side effect, consider restructuring your code."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// a was originally 3")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// a was originally 2")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// a was originally 1")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// a was originally 3")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// a was originally 2")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// a was originally 1")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," hasFound "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"false"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"<="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"&&"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"hasFound) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") hasFound "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"true"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," a "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," hasFound "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"false"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"while"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"<="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"&&"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"!"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"hasFound) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"3"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") hasFound "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"true"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h3",{id:"no-else-return"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-else-return"},(0,r.yg)("inlineCode",{parentName:"a"},"no-else-return"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Allow ",(0,r.yg)("inlineCode",{parentName:"li"},"else if")," after the previous block ends with ",(0,r.yg)("inlineCode",{parentName:"li"},"return")," (",(0,r.yg)("inlineCode",{parentName:"li"},"allowElseIf: true"),")")))),(0,r.yg)("p",null,"Using ",(0,r.yg)("inlineCode",{parentName:"p"},"return")," at the top level instead of within ",(0,r.yg)("inlineCode",{parentName:"p"},"else")," allows you to write with less indentation. It also prevents accidental unreachable code. ",(0,r.yg)("inlineCode",{parentName:"p"},"else if")," is allowed because it leads to fewer lines compared to two separate ",(0,r.yg)("inlineCode",{parentName:"p"},"if")," statements, and also makes the flow clearer."),(0,r.yg)("h3",{id:"no-lonely-if"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-lonely-if"},(0,r.yg)("inlineCode",{parentName:"a"},"no-lonely-if"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Do not use an ",(0,r.yg)("inlineCode",{parentName:"p"},"if")," statement as the only statement in an ",(0,r.yg)("inlineCode",{parentName:"p"},"else")," block. Use ",(0,r.yg)("inlineCode",{parentName:"p"},"else if")," instead."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (something) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (somethingElse) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (something) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (somethingElse) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h2",{id:"loops"},"Loops"),(0,r.yg)("h3",{id:"for-direction"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/for-direction"},(0,r.yg)("inlineCode",{parentName:"a"},"for-direction"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"The for loop should always be iterating in the correct direction, which means increment + check for upper bound, or decrement + check for lower bound."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," i "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"10"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; i "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},">="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; i"),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") console."),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"log"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(i); "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// -> 10 11 12 13 ..."))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"let"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," i "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"10"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; i "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},">="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; i"),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") console."),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"log"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(i); "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// -> 10 11 12 13 ...")))))),(0,r.yg)("h3",{id:"guard-for-in"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/guard-for-in"},(0,r.yg)("inlineCode",{parentName:"a"},"guard-for-in"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("p",null,"We ban ",(0,r.yg)("inlineCode",{parentName:"p"},"for...in")," loops altogether via ",(0,r.yg)("inlineCode",{parentName:"p"},"no-restricted-syntax"),". In the rare case where you actually use ",(0,r.yg)("inlineCode",{parentName:"p"},"for...in"),", we assume you know what you are doing and you actually intend to visit the prototype chain."),(0,r.yg)("h3",{id:"no-continue"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-continue"},(0,r.yg)("inlineCode",{parentName:"a"},"no-continue"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"continue")," is a way of early-bailing to avoid creating extra indentation. Instead of this:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"const"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"line"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"of"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," lines) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (line."),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"trim"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"()."),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"length"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},">"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 20 lines of handling this line...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"const"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"line"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"of"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," lines) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (line."),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"trim"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"()."),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"length"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},">"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 20 lines of handling this line...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"Prefer this:"),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"const"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"line"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"of"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," lines) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (line."),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"trim"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"()."),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"length"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"continue"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// 20 lines of handling this line...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"for"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ("),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"const"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"line"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"of"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," lines) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (line."),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"trim"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"()."),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"length"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"0"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"continue"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// 20 lines of handling this line...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h3",{id:"no-unmodified-loop-condition"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unmodified-loop-condition"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unmodified-loop-condition"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Unmodified loop conditions are usually a mistake. Note that this rule may have false-positives but the chances are low."),(0,r.yg)("h3",{id:"no-unreachable-loop"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unreachable-loop"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unreachable-loop"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Allow no exceptions (",(0,r.yg)("inlineCode",{parentName:"li"},"ignore: []"),")")))),(0,r.yg)("p",null,"Do not write loops that only run once. Either use an ",(0,r.yg)("inlineCode",{parentName:"p"},"if")," statement instead or put the ",(0,r.yg)("inlineCode",{parentName:"p"},"break")," inside a conditional."),(0,r.yg)("h3",{id:"use-of-for-in"},"Use of ",(0,r.yg)("inlineCode",{parentName:"h3"},"for-in")),(0,r.yg)("p",null,"We ban ",(0,r.yg)("inlineCode",{parentName:"p"},"for...in")," loops altogether via ",(0,r.yg)("inlineCode",{parentName:"p"},"no-restricted-syntax"),". This is because it traverses the prototype chain, which is almost never what you want. Usually, you should refactor ",(0,r.yg)("inlineCode",{parentName:"p"},"for (const key in obj)")," to ",(0,r.yg)("inlineCode",{parentName:"p"},"for (const key of Object.keys(obj))"),", or consider if you meant ",(0,r.yg)("inlineCode",{parentName:"p"},"for-of")," in the first place."),(0,r.yg)("h2",{id:"switch-case"},(0,r.yg)("inlineCode",{parentName:"h2"},"switch-case")),(0,r.yg)("h3",{id:"default-case"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/default-case"},(0,r.yg)("inlineCode",{parentName:"a"},"default-case"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("p",null,"We do not require a default case, because it is very idiomatic to use ",(0,r.yg)("inlineCode",{parentName:"p"},"switch-case")," when we do know that the value falls within a finite range."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"type"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"=")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "leaf"'},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"leaf"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"number"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "parent"'},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"parent"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) children: TreeNode[]"},"children")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"[] };")),(0,r.yg)("div",{parentName:"code",className:"line"},"\xa0"),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"function"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"function transformNode(node: TreeNode): void"},"transformNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: TreeNode"},"node")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"switch"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: TreeNode"},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "leaf" | "parent"'},"type"),") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"leaf"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      ",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(parameter) node: {\n    type: "leaf";\n    value: number;\n}'},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"parent"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      ",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(parameter) node: {\n    type: "parent";\n    children: TreeNode[];\n}'},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) children: TreeNode[]"},"children"),"."),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) Array<TreeNode>.forEach(callbackfn: (value: TreeNode, index: number, array: TreeNode[]) => void, thisArg?: any): void"},"forEach")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(",(0,r.yg)("data-lsp",{parentName:"span",lsp:"function transformNode(node: TreeNode): void"},"transformNode"),");")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"default"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// This will never happen given proper boundary typing and input")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// validation, but results in useless non-test-covered lines. Just omit")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// the default case.")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// @ts-expect-error: should never happen")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"throw"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"new"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error"},"Error")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"`Bad node type ${"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: never"},"node")),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"any"},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"}`"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},");")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark twoslash lsp",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"type"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"=")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "leaf"'},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"leaf"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"number"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "parent"'},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"parent"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) children: TreeNode[]"},"children")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"[] };")),(0,r.yg)("div",{parentName:"code",className:"line"},"\xa0"),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"function"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"function transformNode(node: TreeNode): void"},"transformNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: TreeNode"},"node")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:'type TreeNode = {\n    type: "leaf";\n    value: number;\n} | {\n    type: "parent";\n    children: TreeNode[];\n}'},"TreeNode")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"switch"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: TreeNode"},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(property) type: "leaf" | "parent"'},"type"),") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"leaf"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      ",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(parameter) node: {\n    type: "leaf";\n    value: number;\n}'},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) value: number"},"value")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"++"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"parent"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      ",(0,r.yg)("data-lsp",{parentName:"span",lsp:'(parameter) node: {\n    type: "parent";\n    children: TreeNode[];\n}'},"node"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) children: TreeNode[]"},"children"),"."),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) Array<TreeNode>.forEach(callbackfn: (value: TreeNode, index: number, array: TreeNode[]) => void, thisArg?: any): void"},"forEach")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(",(0,r.yg)("data-lsp",{parentName:"span",lsp:"function transformNode(node: TreeNode): void"},"transformNode"),");")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"break"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"default"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// This will never happen given proper boundary typing and input")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// validation, but results in useless non-test-covered lines. Just omit")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// the default case.")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// @ts-expect-error: should never happen")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"throw"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"new"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error"},"Error")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"`Bad node type ${"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) node: never"},"node")),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"any"},"type")),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"}`"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},");")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"More favorably, ",(0,r.yg)("em",{parentName:"p"},"only")," use switch-case if the matched value has a finite range (e.g. a union of literals). If it can be any value, use if-else instead."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"type"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"type Res = {\n    code: 200;\n    body: string;\n    error: never;\n} | {\n    code: number;\n    error: string;\n    body: never;\n}"},"Res")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"=")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: 200"},"code")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"200"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: string"},"body")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"string"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) error: never"},"error")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"never"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"number"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) error: string"},"error")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"string"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: never"},"body")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"never"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," };")),(0,r.yg)("div",{parentName:"code",className:"line"},"\xa0"),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"function"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"function handleResponse(res: Res): string"},"handleResponse")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res")),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#953800"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"type Res = {\n    code: 200;\n    body: string;\n    error: never;\n} | {\n    code: number;\n    error: string;\n    body: never;\n}"},"Res")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"404"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"Not found"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"500"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},'"Server error"'),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"200"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," ",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: string"},"body"),";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"`Unknown response shape: ${"),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var JSON: JSON"},"JSON")),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)"},"stringify")),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res")),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},")"),(0,r.yg)("span",{parentName:"div",style:{color:"#0A3069"}},"}`"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark twoslash lsp",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"type"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"type Res = {\n    code: 200;\n    body: string;\n    error: never;\n} | {\n    code: number;\n    error: string;\n    body: never;\n}"},"Res")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"=")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: 200"},"code")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"200"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: string"},"body")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"string"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"      "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) error: never"},"error")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"never"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"|"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," { "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"number"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) error: string"},"error")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"string"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"; "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: never"},"body")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"never"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," };")),(0,r.yg)("div",{parentName:"code",className:"line"},"\xa0"),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"function"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"function handleResponse(res: Res): string"},"handleResponse")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res")),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},":"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FFA657"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"type Res = {\n    code: 200;\n    body: string;\n    error: never;\n} | {\n    code: number;\n    error: string;\n    body: never;\n}"},"Res")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"404"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"Not found"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"500"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},'"Server error"'),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"if"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) code: number"},"code")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"==="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"200"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," ",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res"),".",(0,r.yg)("data-lsp",{parentName:"span",lsp:"(property) body: string"},"body"),";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  } "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"else"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"return"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"`Unknown response shape: ${"),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var JSON: JSON"},"JSON")),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"."),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(method) JSON.stringify(value: any, replacer?: ((this: any, key: string, value: any) => any) | undefined, space?: string | number | undefined): string (+1 overload)"},"stringify")),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"(parameter) res: Res"},"res")),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},")"),(0,r.yg)("span",{parentName:"div",style:{color:"#A5D6FF"}},"}`"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},";")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  }")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"You may ask, what if the type doesn't reflect the full range of possible runtime input? The answer is, you are missing input validation. Writing incomplete types is going to cause troubles elsewhere, if not here."),(0,r.yg)("h3",{id:"default-case-last"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/default-case-last"},(0,r.yg)("inlineCode",{parentName:"a"},"default-case-last"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"In case where there's indeed a default case, we require it to be placed last. This is because a default case means, well, that all ",(0,r.yg)("em",{parentName:"p"},"previous")," matches have failed. When reading the code, the reader is more interested in what the ",(0,r.yg)("em",{parentName:"p"},"previous")," specified cases are rather than what the fallback behavior is."),(0,r.yg)("h3",{id:"no-case-declarations"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-case-declarations"},(0,r.yg)("inlineCode",{parentName:"a"},"no-case-declarations"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"If a case contains lexical declarations, it must be wrapped in a block. This is because the ",(0,r.yg)("inlineCode",{parentName:"p"},"case")," are more like labels and do not create their own scope. This may lead to unexpected bugs, especially if there's fallthrough."),(0,r.yg)("p",null,"TODO: examples?"),(0,r.yg)("h3",{id:"no-duplicate-case"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-duplicate-case"},(0,r.yg)("inlineCode",{parentName:"a"},"no-duplicate-case"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"See ",(0,r.yg)("a",{parentName:"p",href:"#no-dupe-else-if"},(0,r.yg)("inlineCode",{parentName:"a"},"no-dupe-else-if")),"."),(0,r.yg)("h3",{id:"no-fallthrough"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-fallthrough"},(0,r.yg)("inlineCode",{parentName:"a"},"no-fallthrough"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Allow empty cases to fall through (",(0,r.yg)("inlineCode",{parentName:"li"},"allowEmptyCase: true"),")"),(0,r.yg)("li",{parentName:"ul"},"Do not allow comments (",(0,r.yg)("inlineCode",{parentName:"li"},"commentPattern: undefined"),")")))),(0,r.yg)("p",null,"It is a common error to forget ",(0,r.yg)("inlineCode",{parentName:"p"},"break"),". In cases where you do want to fall through, use a disable comment, which is just as expressive as a custom comment like ",(0,r.yg)("inlineCode",{parentName:"p"},"// fallthrough"),"."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"switch"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (a) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"    console."),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"log"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"();")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// eslint-disable-next-line no-fallthrough")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},"2"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"switch"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (a) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"1"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"    console."),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"log"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"();")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// eslint-disable-next-line no-fallthrough")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"case"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},"2"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},":")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h2",{id:"try-catch"},(0,r.yg)("inlineCode",{parentName:"h2"},"try-catch")),(0,r.yg)("h3",{id:"no-ex-assign"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-ex-assign"},(0,r.yg)("inlineCode",{parentName:"a"},"no-ex-assign"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"There aren't many good reasons for re-assigning ",(0,r.yg)("inlineCode",{parentName:"p"},"err")," in a ",(0,r.yg)("inlineCode",{parentName:"p"},"catch")," block. In TypeScript, its type is always ",(0,r.yg)("inlineCode",{parentName:"p"},"unknown"),", so even if you normalize its type in value-land, you still have to cast it to a more specific type to use it."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light twoslash lsp",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"catch"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown"},"err"),") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  ",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown",style:{borderBottom:"solid 2px lightgrey"}},"err")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"new"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error"},"Error")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#0550AE"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var String: StringConstructor\n(value?: any) => string"},"String")),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown",style:{borderBottom:"solid 2px lightgrey"}},"err"),")); "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// err is still unknown")),(0,r.yg)("div",{parentName:"code",className:"meta-line"},(0,r.yg)("span",{parentName:"div",className:"popover-prefix"},"  "),(0,r.yg)("span",{parentName:"div",className:"popover"},(0,r.yg)("div",{parentName:"span",className:"arrow"}),"var err: unknown")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark twoslash lsp",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"catch"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown"},"err"),") {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  ",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown",style:{borderBottom:"solid 2px lightgrey"}},"err")," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"="),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"new"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," "),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var Error: ErrorConstructor\nnew (message?: string | undefined) => Error"},"Error")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"("),(0,r.yg)("span",{parentName:"div",style:{color:"#79C0FF"}},(0,r.yg)("data-lsp",{parentName:"span",lsp:"var String: StringConstructor\n(value?: any) => string"},"String")),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(",(0,r.yg)("data-lsp",{parentName:"span",lsp:"var err: unknown",style:{borderBottom:"solid 2px lightgrey"}},"err"),")); "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// err is still unknown")),(0,r.yg)("div",{parentName:"code",className:"meta-line"},(0,r.yg)("span",{parentName:"div",className:"popover-prefix"},"  "),(0,r.yg)("span",{parentName:"div",className:"popover"},(0,r.yg)("div",{parentName:"span",className:"arrow"}),"var err: unknown")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("p",null,"Just create a new variable instead."),(0,r.yg)("h3",{id:"no-unsafe-finally"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unsafe-finally"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unsafe-finally"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Do not use control-flow statements (",(0,r.yg)("inlineCode",{parentName:"p"},"return")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"throw")," in particular) in a ",(0,r.yg)("inlineCode",{parentName:"p"},"finally")," block. This overwrites the completion value of the ",(0,r.yg)("inlineCode",{parentName:"p"},"try")," block."),(0,r.yg)("p",null,"Note that errors may still be thrown from the ",(0,r.yg)("inlineCode",{parentName:"p"},"finally")," block but the possibility is low. When this happens, it usually means something very bad had happened and is not up to the developer to handle anyway."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"finally"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8250DF"}},"closeFile"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"(); "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// May still throw if the file fails to close")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"finally"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#D2A8FF"}},"closeFile"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"(); "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// May still throw if the file fails to close")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h3",{id:"no-useless-catch"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-useless-catch"},(0,r.yg)("inlineCode",{parentName:"a"},"no-useless-catch"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Do not use ",(0,r.yg)("inlineCode",{parentName:"p"},"try-catch")," blocks that only re-throw the caught error. This is a sign of refactoring artifacts."),(0,r.yg)("div",{className:"shiki-twoslash-fragment"},(0,r.yg)("pre",{parentName:"div",className:"shiki github-light",style:{backgroundColor:"#ffffff",color:"#24292f"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"catch"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," (e) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#6E7781"}},"// Maybe you intend to have some additional handling here?")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#CF222E"}},"throw"),(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}}," e;")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#24292F"}},"}"))))),(0,r.yg)("pre",{parentName:"div",className:"shiki github-dark",style:{backgroundColor:"#0d1117",color:"#c9d1d9"}},(0,r.yg)("div",{parentName:"pre",className:"language-id"},"ts"),(0,r.yg)("div",{parentName:"pre",className:"code-container"},(0,r.yg)("code",{parentName:"div"},(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"try"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// ...")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"} "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"catch"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," (e) {")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#8B949E"}},"// Maybe you intend to have some additional handling here?")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"  "),(0,r.yg)("span",{parentName:"div",style:{color:"#FF7B72"}},"throw"),(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}}," e;")),(0,r.yg)("div",{parentName:"code",className:"line"},(0,r.yg)("span",{parentName:"div",style:{color:"#C9D1D9"}},"}")))))),(0,r.yg)("h2",{id:"labels"},"Labels"),(0,r.yg)("h3",{id:"no-extra-label"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-extra-label"},(0,r.yg)("inlineCode",{parentName:"a"},"no-extra-label"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Only use a label when it can break out of nested loops. Do not use labels if the ",(0,r.yg)("inlineCode",{parentName:"p"},"break"),"/",(0,r.yg)("inlineCode",{parentName:"p"},"continue")," functions correctly without them."),(0,r.yg)("h3",{id:"no-label-var"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-label-var"},(0,r.yg)("inlineCode",{parentName:"a"},"no-label-var"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"Do not give a label the same name as a variable. This is potentially confusing."),(0,r.yg)("h3",{id:"no-labels"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-labels"},(0,r.yg)("inlineCode",{parentName:"a"},"no-labels"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("p",null,"We allow labels. They are useful for breaking out of nested loops. However, we ban unnecessary labels with ",(0,r.yg)("inlineCode",{parentName:"p"},"no-extra-label")," and unused labels with ",(0,r.yg)("inlineCode",{parentName:"p"},"no-unused-labels"),", which should eliminate most of the problems with accidental labels."),(0,r.yg)("h3",{id:"no-unused-labels"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unused-labels"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unused-labels"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Related:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ts(7028): Unused label."))))),(0,r.yg)("p",null,"Do not declare labels that are not used. This is the same mistake as declaring unused variables, and is potentially worse because labels are very rare, and unused labels are usually signs of miswritten code, such as ",(0,r.yg)("inlineCode",{parentName:"p"},"() => { a: 1 }")," where ",(0,r.yg)("inlineCode",{parentName:"p"},"a")," is parsed as a label."),(0,r.yg)("h2",{id:"other-statements"},"Other statements"),(0,r.yg)("h3",{id:"no-debugger"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-debugger"},(0,r.yg)("inlineCode",{parentName:"a"},"no-debugger"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"You should never have ",(0,r.yg)("inlineCode",{parentName:"p"},"debugger")," statements in production code."),(0,r.yg)("h3",{id:"no-throw-literal"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-throw-literal"},(0,r.yg)("inlineCode",{parentName:"a"},"no-throw-literal"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error")),(0,r.yg)("p",null,"You should always throw one of the following:"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Newly created ",(0,r.yg)("inlineCode",{parentName:"li"},"Error")," instances"),(0,r.yg)("li",{parentName:"ol"},"In the case of re-throwing: the caught error"),(0,r.yg)("li",{parentName:"ol"},"In the case of an API returning an error wrapped in a result: the expression representing that error (usually ",(0,r.yg)("inlineCode",{parentName:"li"},"result.error"),", etc.)")),(0,r.yg)("p",null,"Throwing a string literal is never allowed because it doesn't contain the stack trace and other APIs expecting ",(0,r.yg)("inlineCode",{parentName:"p"},"Error")," instances may not function correctly. There are some API designs that require using ",(0,r.yg)("inlineCode",{parentName:"p"},"throw")," (like ",(0,r.yg)("inlineCode",{parentName:"p"},"throw redirect(301)"),") but such cases are extremely rare."),(0,r.yg)("h3",{id:"no-unreachable"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unreachable"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unreachable"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Related:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ts(7027): Unreachable code detected."))))),(0,r.yg)("p",null,"Unreachable code is always a mistake. Furthermore, TypeScript gives up on control-flow analysis inside unreachable code, so you may get type errors that are not real."),(0,r.yg)("h3",{id:"no-unused-expressions"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-unused-expressions"},(0,r.yg)("inlineCode",{parentName:"a"},"no-unused-expressions"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Configuration:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Allow short-circuiting operators (",(0,r.yg)("inlineCode",{parentName:"li"},"allowShortCircuit: true"),")"),(0,r.yg)("li",{parentName:"ul"},"Allow ternary expressions (",(0,r.yg)("inlineCode",{parentName:"li"},"allowTernary: true"),")"),(0,r.yg)("li",{parentName:"ul"},"Allow tagged templates (",(0,r.yg)("inlineCode",{parentName:"li"},"allowTaggedTemplates: true"),")"),(0,r.yg)("li",{parentName:"ul"},"Disallow unused JSX expressions (",(0,r.yg)("inlineCode",{parentName:"li"},"enforceForJSX: true"),")"))),(0,r.yg)("li",{parentName:"ul"},"Related:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"/js-style-guide/typescript/base#no-unused-expressions"},(0,r.yg)("inlineCode",{parentName:"a"},"@typescript-eslint/no-unused-expressions")))))),(0,r.yg)("p",null,"Every expression statement must have some side-effect. We allow only the following expressions as statements:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Assignments"),(0,r.yg)("li",{parentName:"ul"},"Calls (including ",(0,r.yg)("inlineCode",{parentName:"li"},"new"),", tagged templates, and ",(0,r.yg)("inlineCode",{parentName:"li"},"import()"),")"),(0,r.yg)("li",{parentName:"ul"},"Logical operators (",(0,r.yg)("inlineCode",{parentName:"li"},"&&"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"||"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"??"),", ",(0,r.yg)("inlineCode",{parentName:"li"},"? :"),") to substitute for control-flow statements like ",(0,r.yg)("inlineCode",{parentName:"li"},"if...else"))),(0,r.yg)("h3",{id:"no-with"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/no-with"},(0,r.yg)("inlineCode",{parentName:"a"},"no-with"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: error"),(0,r.yg)("li",{parentName:"ul"},"Related:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"ts(1101): 'with' statements are not allowed in strict mode."))))),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"with")," is forbidden in strict mode. It is also forbidden in TypeScript and causes TypeScript to give up on any type checking."),(0,r.yg)("h2",{id:"complexity"},"Complexity"),(0,r.yg)("p",null,"We don't think there's a single good metric of code complexity. We optimize for readability instead, and sometimes workarounds to \"high complexity\" code actually reduces readability by fragments the code into chunks that are hard to trace. Therefore, most of the rules aiming to limit complexity are disabled."),(0,r.yg)("h3",{id:"complexity-1"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/complexity"},(0,r.yg)("inlineCode",{parentName:"a"},"complexity"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("h3",{id:"max-depth"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/max-depth"},(0,r.yg)("inlineCode",{parentName:"a"},"max-depth"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("h3",{id:"max-lines"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/max-lines"},(0,r.yg)("inlineCode",{parentName:"a"},"max-lines"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")),(0,r.yg)("h3",{id:"max-statements"},(0,r.yg)("a",{parentName:"h3",href:"https://eslint.org/docs/rules/max-statements"},(0,r.yg)("inlineCode",{parentName:"a"},"max-statements"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Severity: off")))}c.isMDXComponent=!0}}]);